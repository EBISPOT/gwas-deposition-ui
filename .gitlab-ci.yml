image: docker:latest
services:
  - docker:dind

stages:
  - build
  - docker
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  CI_REGISTRY_IMAGE: ebispot/gwas-deposition-ui
  UI_SERVICE_NAME: gwas-deposition-ui

npm-build:
  image: node:10.15.3
  stage: build
  script:
    - npm -v
    - node -v
    - rm -rf node_modules
    - npm install
    - CI=false npm run build
  artifacts:
    paths:
      - build/*
  except:
    - tags

docker:
  stage: docker
  script:
    - echo "$DOCKER_HUB_PASSWORD" > dhpw.txt
    - docker login -u "${DOCKER_HUB_USER}" --password-stdin < dhpw.txt
    - docker build --force-rm=true -t $UI_SERVICE_NAME:latest .
    - docker tag $UI_SERVICE_NAME:latest $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  only:
    - master

build_release:
  stage: build
  script:
    - echo "$DOCKER_HUB_PASSWORD" > dhpw.txt
    - docker login -u "${DOCKER_HUB_USER}" --password-stdin < dhpw.txt
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags

deploy-sandbox:
  image: dtzar/helm-kubectl:2.13.1
  stage: deploy
  script:
    - echo "Deploy to sandbox server"
    - mkdir -p /root/.kube
    - echo ${SANBOX_KUBECONF} | base64 -d > /root/.kube/config
    - helm init
    - helm delete --purge gwas-deposition-ui || true
    - helm install --name gwas-deposition-ui --set ingress.enabled=true,k8Namespace=gwas,image.repository=$CI_REGISTRY_IMAGE,image.tag=$CI_COMMIT_SHA ./k8chart/ --wait
  environment:
    name: sandbox
  only:
    - master

deploy-fallback:
  image: dtzar/helm-kubectl:2.13.1
  stage: deploy
  script:
    - echo "Deploy to Production fallback server"
    - mkdir -p /root/.kube
    - echo ${PFALLBACK_KUBECONFIG} | base64 -d > /root/.kube/config
    - helm init
    - helm delete --purge gwas-deposition-ui || true
    - helm install --name gwas-deposition-ui --set k8Namespace=gwas,replicaCount=3,image.repository=$CI_REGISTRY_IMAGE,image.tag=$CI_COMMIT_TAG ./k8chart/ --wait
  environment:
    name: production
  only:
    - tags

deploy-production:
  image: dtzar/helm-kubectl:2.13.1
  stage: deploy
  script:
    - echo "Deploy to Production server"
    - mkdir -p /root/.kube
    - echo ${PLIVE_KUBECONFIG} | base64 -d > /root/.kube/config
    - helm init
    - helm delete --purge gwas-deposition-ui || true
    - helm install --name gwas-deposition-ui --set k8Namespace=gwas,replicaCount=3,image.repository=$CI_REGISTRY_IMAGE,image.tag=$CI_COMMIT_TAG ./k8chart/ --wait
  environment:
    name: production
  only:
    - tags
